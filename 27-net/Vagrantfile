# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
    :box_name => "centos/7",
    :vm_name => "inetRouter",
    #:public => {:ip => '10.10.10.1', :adapter => 1},
    :net => [
      {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252",virtualbox__intnet: "router-net"},
      {ip: '192.168.50.11', adapter: 8},
    ]
  },
  :centralRouter => {
    :box_name => "centos/7",
    :vm_name => "centralRouter",
    :net => [
      {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252",virtualbox__intnet: "router-net"},
      {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240",virtualbox__intnet: "dir-net"},
      {ip: '192.168.0.33', adapter: 4, netmask: "255.255.255.240",virtualbox__intnet: "hw-net"},
      {ip: '192.168.0.65', adapter: 5, netmask: "255.255.255.192",virtualbox__intnet: "mgt-net"},
      {ip: '192.168.255.5', adapter: 6, netmask: "255.255.255.252",virtualbox__intnet: "office2-central"},
      {ip: '192.168.255.9', adapter: 7, netmask: "255.255.255.252",virtualbox__intnet: "office1-central"},
      {ip: '192.168.50.12', adapter: 8},
    ]
  },
  :centralServer => {
    :box_name => "centos/7",
    :vm_name => "centralServer",
    :net => [
      {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240",virtualbox__intnet: "dir-net"},
      {ip: '192.168.50.13', adapter: 8},
    ]
  },
  :office1Router => {
    :box_name => "ubuntu/focal64",
    :vm_name => "office1Router",
    :net => [
      {ip: '192.168.255.10', adapter: 2, netmask: "255.255.255.252",virtualbox__intnet: "office1-central"},
      {ip: '192.168.2.1', adapter: 3, netmask: "255.255.255.192",virtualbox__intnet: "dev1-net"},
      {ip: '192.168.2.65', adapter: 4, netmask: "255.255.255.192",virtualbox__intnet: "test1-net"},
      {ip: '192.168.2.129', adapter: 5, netmask: "255.255.255.192",virtualbox__intnet: "managers-net"},
      {ip: '192.168.2.193', adapter: 6, netmask: "255.255.255.192",virtualbox__intnet: "office1-net"},
      {ip: '192.168.50.14', adapter: 8},
    ]
  },
  :office1Server => {
    :box_name => "ubuntu/focal64",
    :vm_name => "office1Server",
    :net => [
      {ip: '192.168.2.130', adapter: 2, netmask: "255.255.255.192",virtualbox__intnet: "managers-net"},
      {ip: '192.168.50.15', adapter: 8},
    ]
  },
  :office2Router => {
    :box_name => "debian/bullseye64",
    :vm_name => "office2Router",
    :net => [
      {ip: '192.168.255.6', adapter: 2, netmask: "255.255.255.252",virtualbox__intnet: "office2-central"},
      {ip: '192.168.1.1', adapter: 3, netmask: "255.255.255.128",virtualbox__intnet: "dev2-net"},
      {ip: '192.168.1.129', adapter: 4, netmask: "255.255.255.192",virtualbox__intnet: "test2-net"},
      {ip: '192.168.1.193', adapter: 5, netmask: "255.255.255.192",virtualbox__intnet: "office2-net"},
      {ip: '192.168.50.16', adapter: 8},
    ]
  },
  :office2Server => {
    :box_name => "debian/bullseye64",
    :vm_name => "office2Server",
    :net => [
      {ip: '192.168.1.2', adapter: 2, netmask: "255.255.255.128",virtualbox__intnet: "dev2-net"},
      {ip: '192.168.50.17', adapter: 8},
    ]
  }
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]

      # if boxconfig[:vm_name] == "office2Server"
      #   box.vm.provision "ansible" do |ansible|
      #     ansible.playbook = "ansible/provision.yml"
      #     ansible.inventory_path = "ansible/hosts"
      #     ansible.host_key_checking = "false"
      #     ansible.limit = "all"
      #   end
      # end

      boxconfig[:net].each do |ipconf|
        box.vm.network "private_network", ipconf
      end
      if boxconfig.key?(:public)
        box.vm.network "public_network", boxconfig[:public]
      end

      # box.vm.provision "shell", inline: <<-SHELL
      #   mkdir -p ~root/.ssh
      #         cp ~vagrant/.ssh/auth* ~root/.ssh
      # SHELL
        
    end
  end


  config.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
  config.vm.provision "shell", path: "./files/bootstrap.sh"
  config.vm.provision :ansible do |ansible|
    # ansible.verbose = 'vvvv'
    # https://martincarstenbach.wordpress.com/2019/04/11/ansible-tipsntricks-provision-multiple-machines-in-parallel-with-vagrant-and-ansible/

    # Disable default limit to connect to all the machines
    ansible.limit = "all"
    ansible.playbook = 'provisioning/check.yml'
    ansible.groups = {
      'routers' => ['inetRouter', 'centralRouter', 'office1Router', 'office2Router'],
      'servers' => ['centralServer', 'office1Server', 'office2Server']
    }
    ansible.host_vars = {
      'inetRouter' => { 'host_ip' => '192.168.50.11' },
      'centralRouter' => { 'host_ip' => '192.168.50.12' },
      'office1Router' => { 'host_ip' => '192.168.50.14' },
      'office2Router' => { 'host_ip' => '192.168.50.16' },

      'centralServer' => { 'host_ip' => '192.168.50.13' },
      'office1Server' => { 'host_ip' => '192.168.50.15' },
      'office2Server' => { 'host_ip' => '192.168.50.17' },
    }
  end
end
