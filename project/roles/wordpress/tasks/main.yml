---
# dnf install -y curl wget vim git unzip socat bash-completion epel-release socat && sudo dnf groupinstall "Development Tools"
# dnf install network-scripts

- name: Distribution
  debug: msg="{{ ansible_distribution }}"
- name: Distribution version
  debug: msg="{{ ansible_distribution_version}}"
- name: Distribution major version
  debug: msg="{{ ansible_distribution_major_version }}"

- name: install utils
  dnf:
    name:
      # - "@development-tools"
      - curl
      - wget
      - vim
      - git
      - unzip
      - socat
      - bash-completion
    state: present
  when:
    - ansible_distribution == 'AlmaLinux'
    - ansible_distribution_major_version | int >= 8


- name: disable default route
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-enp0s3
    line: DEFROUTE=no

- name: add default gateway for centralRouter
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-enp0s8
    line: GATEWAY=192.168.30.1

- name: add default gateway
  shell: route add default gw 192.168.30.1
  ignore_errors: true


- name: add routes
  template:
    src: '{{  item  }}'
    dest: /etc/sysconfig/network-scripts/
  loop:
    - route-enp0s8
  # notify:
  #   - restart_networking

- name: restart networking
  service:
    name: NetworkManager.service
    state: restarted
    enabled: yes

- name: create /var/www/{{ server_name }} directory for unarchiving
  file:
    path: /var/www/{{ server_name }}
    state: directory

- name: Download and unpack latest WordPress
  unarchive:
    src: https://wordpress.org/wordpress-5.0.13.tar.gz
    dest: "/var/www/{{ server_name }}"
    remote_src: yes
    creates: "/var/www/{{ server_name }}/wordpress"



# todo - move
# - name: WEB SERVER | CONFIGURE SELINUX FOR NGINX
#   shell: semanage fcontext -a -t httpd_sys_rw_content_t /var/www/site.project/logs/access.log ; restorecon -v /var/www/site.project/logs/access.log ; semanage fcontext -a -t httpd_sys_rw_content_t /var/www/site.project/logs/error.log ; restorecon -v /var/www/site.project/logs/error.log



- name: Set ownership Redhat
  file:
    path: "/var/www/{{ server_name }}"
    state: directory
    recurse: yes
    owner: nginx
    group: nginx
  when:
    - ansible_os_family == "RedHat"

- name: Set ownership Debian
  file:
    path: "/var/www/{{ server_name }}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
  when:
    - ansible_os_family == "Debian"



- name: Copy WordPress config file
  template:
    src: wp-config.php.j2
    dest: "/var/www/{{ server_name }}/wordpress/wp-config.php"



- name: install SEManage
  yum: pkg=policycoreutils-python state=present
  when:
    - ansible_os_family == 'CentOS'
    - ansible_distribution_major_version | int <= 7

- name: install SEManage 2
  yum:
    name:
      - policycoreutils-python-utils
      - setools-console
      - setroubleshoot-server
    state: present
  when:
    - ansible_os_family == 'AlmaLinux'
    - ansible_distribution_major_version | int >= 8

- name: set the SELinux policy for the Wordpress directory
  command: semanage fcontext -a -t httpd_sys_content_t "{{ wp_home_dir }}/wordpress(/.*)?"
  tags:
  - skip_ansible_lint

- name: set the SELinux policy for wp-config.php
  command: semanage fcontext -a -t httpd_sys_script_exec_t "{{ wp_home_dir }}/wp-config\.php"
  tags:
  - skip_ansible_lint

- name: set the SELinux policy for wp-content directory
  command: semanage fcontext -a -t httpd_sys_rw_content_t "{{ wp_home_dir }}/wp-content(/.*)?"
  tags:
  - skip_ansible_lint

- name: set the SELinux policy for the *.php files
  command: semanage fcontext -a -t httpd_sys_script_exec_t "{{ wp_home_dir }}/wordpress/.*\.php"
  tags:
  - skip_ansible_lint

- name: set the SELinux policy for the Upgrade directory
  command: semanage fcontext -a -t httpd_sys_rw_content_t "{{ wp_home_dir }}/wp-content/upgrade(/.*)?"
  tags:
  - skip_ansible_lint

- name: set the SELinux policy for the Uploads directory
  command: semanage fcontext -a -t httpd_sys_rw_content_t "{{ wp_home_dir }}/wp-content/uploads(/.*)?"
  tags:
  - skip_ansible_lint

- name: set the SELinux policy for the wp-includes php files
  command: semanage fcontext -a -t httpd_sys_script_exec_t "{{ wp_home_dir }}/wp-includes/.*\.php"
  tags:
  - skip_ansible_lint

- name: set the SELinux on all the Files
  command: restorecon -Rv {{ wp_home_dir }}
#  command: restorecon -RF /srv/wordpress
  tags:
  - skip_ansible_lint

- name: set the SELinux bool to allow connection to db
  command: setsebool -P httpd_can_network_connect_db 1
  tags:
  - skip_ansible_lint

- name: Start php-fpm Service
  service: name=php-fpm state=started enabled=yes
  ignore_errors: true
  tags:
  - skip_ansible_lint

