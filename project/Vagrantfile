# VAGRANT_EXPERIMENTAL="disks"
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
    :box_name => "centos/7",
    :vm_name => "inetRouter",
    :net => [
      {ip: '192.168.10.10', adapter: 2, netmask: "255.255.255.0"},
      {ip: '192.168.30.1', adapter: 4, netmask: "255.255.255.0", virtualbox__intnet: "intranet"},

    ]
  },
  :mysqlServer => {
    :box_name => "centos/7",
    :vm_name => "mysqlServer",
    :net => [
      {ip: '192.168.30.3', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "intranet"},
    ]
  },
  :wordpressServer => {
    :box_name => "centos/7",
    :vm_name => "wordpressServer",
    :net => [
      {ip: '192.168.30.2', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "intranet"},
    ]
  },
  :backupsServer => {
    :box_name => "centos/7",
    :vm_name => "backupsServer",
    :net => [
      {ip: '192.168.30.5', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "intranet"},
    ]
  },
  :monitorServer => {
    :box_name => "almalinux/8",
    :vm_name => "monitorServer",
    :net => [
      {ip: '192.168.30.4', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "intranet"},
    ]
  }
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]

      if boxconfig[:vm_name] == "monitorServer"
        box.vm.network "forwarded_port", guest: 9100, host: 9100
        box.vm.network "forwarded_port", guest: 9090, host: 9090
        box.vm.network "forwarded_port", guest: 3000, host: 3000
      end

      if boxconfig[:vm_name] == "backupsServer"
        box.vm.disk :disk, size: '300MB', name: "borg"
        # box.vm.disk :disk, size: '2GB', name: "borg"
      end

      boxconfig[:net].each do |ipconf|
        box.vm.network "private_network", ipconf
      end
      if boxconfig.key?(:public)
        box.vm.network "public_network", boxconfig[:public]
      end
    end
  end

  config.vm.provision "file", source: "files/authorized_keys", destination: "~/authorized_keys"
  config.vm.provision "shell", path: "./files/bootstrap.sh"
  config.vm.provision :ansible do |ansible|
    # ansible.verbose = 'vvvv'
    # https://martincarstenbach.wordpress.com/2019/04/11/ansible-tipsntricks-provision-multiple-machines-in-parallel-with-vagrant-and-ansible/

    # Disable default limit to connect to all the machines
    ansible.limit = "all"
    ansible.playbook = 'provisioning/check.yml'
    ansible.groups = {
      'routers' => ['inetRouter'],
      'servers' => ['wordpressServer']
    }
    ansible.host_vars = {
      'inetRouter' => { 'host_ip' => '192.168.50.11' }

    }
  end
end
